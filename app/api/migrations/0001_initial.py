# Generated by Django 4.1.6 on 2023-03-22 15:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BidRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(default=None, max_length=255, null=True, unique=True)),
                ('imp', models.TextField(default=None, null=True)),
                ('click', models.FloatField(default=None, null=True)),
                ('conv', models.FloatField(default=None, null=True)),
                ('site', models.TextField(default=None, null=True)),
                ('ssp_id', models.CharField(default=None, max_length=255, null=True)),
                ('user_id', models.CharField(default=None, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'BidRequest',
            },
        ),
        migrations.CreateModel(
            name='BidResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(default=None, max_length=255, null=True)),
                ('image_url', models.TextField(default=None, null=True)),
                ('price', models.FloatField(default=None, null=True)),
                ('bid_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.bidrequest')),
            ],
            options={
                'verbose_name_plural': 'BidResponse',
            },
        ),
        migrations.CreateModel(
            name='BidResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.BooleanField(default=False)),
                ('price', models.FloatField(default=None, null=True)),
                ('click', models.FloatField(default=None, null=True)),
                ('conv', models.FloatField(default=None, null=True)),
                ('revenue', models.FloatField(default=None, null=True)),
                ('external_id', models.CharField(default=None, max_length=255, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'BidResult',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('budget', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('external_id', models.CharField(default='', max_length=255)),
                ('frequency_capping', models.FloatField(default=0)),
                ('bid_floor', models.FloatField(default=0)),
                ('played_games', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Campaign',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='', max_length=255, unique=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('super_category', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.category')),
            ],
            options={
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_goal', models.IntegerField(default=0)),
                ('total_revenue', models.FloatField(default=0)),
                ('impressions_total', models.IntegerField(default=0)),
                ('played_rounds', models.IntegerField(default=0)),
                ('auction_type', models.IntegerField(choices=[(1, 'First Price'), (2, 'Second Price')], default=2)),
                ('mode', models.TextField(choices=[('free', 'Free'), ('script', 'Script')], default='free')),
                ('budget', models.FloatField(default=0)),
                ('impressions_revenue', models.IntegerField(default=0)),
                ('click_revenue', models.IntegerField(default=0)),
                ('conversion_revenue', models.IntegerField(default=0)),
                ('frequency_capping', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Config',
            },
        ),
        migrations.CreateModel(
            name='Creative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(default='', max_length=255, unique=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='creative/')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.campaign')),
                ('categories', models.ManyToManyField(to='api.category')),
            ],
            options={
                'verbose_name_plural': 'Creative',
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verify_code', models.TextField(default='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SspUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255, null=True)),
                ('frequency_capping', models.IntegerField(default=0)),
                ('creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.creative')),
            ],
            options={
                'verbose_name_plural': 'Ssp_user',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_request', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.bidrequest')),
                ('bid_response', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.bidresponse')),
                ('bid_result', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.bidresult')),
            ],
            options={
                'verbose_name_plural': 'History',
            },
        ),
        migrations.AddField(
            model_name='bidresponse',
            name='categories',
            field=models.ManyToManyField(to='api.category'),
        ),
        migrations.AddField(
            model_name='bidresponse',
            name='creative',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.creative'),
        ),
        migrations.AddField(
            model_name='bidrequest',
            name='categories',
            field=models.ManyToManyField(to='api.category'),
        ),
    ]
